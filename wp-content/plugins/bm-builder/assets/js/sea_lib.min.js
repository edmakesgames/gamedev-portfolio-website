/*function debounce, function throttle, function sea_get_browser, function page loader, function return is has not gsap*/
sea_now=Date.now||function(){return(new Date).getTime()};sea_debounce=function(n,u,t){var e,l,o,r,i,a=function(){var c=sea_now()-r;c<u&&c>=0?e=setTimeout(a,u-c):(e=null,t||(i=n.apply(o,l),e||(o=l=null)))};return function(){o=this,l=arguments,r=sea_now();var c=t&&!e;return e||(e=setTimeout(a,u)),c&&(i=n.apply(o,l),o=l=null),i}};function sea_throttle(n,l,t){var a,e,u,i,r=0;t||(t={});var o=function(){r=!1===t.leading?0:sea_now(),a=null,i=n.apply(e,u),a||(e=u=null)},c=function(){var c=sea_now();r||!1!==t.leading||(r=c);var f=l-(c-r);return e=this,u=arguments,f<=0||f>l?(a&&(clearTimeout(a),a=null),r=c,i=n.apply(e,u),a||(e=u=null)):a||!1===t.trailing||(a=setTimeout(o,f)),i};return c.cancel=function(){clearTimeout(a),r=0,a=e=u=null},c}function sea_get_browser(){var e,r=navigator.userAgent,a=r.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];return/trident/i.test(a[1])?{name:"IE",version:(e=/\brv[ :]+(\d+)/g.exec(r)||[])[1]||""}:"Chrome"===a[1]&&null!=(e=r.match(/\bOPR\/(\d+)/))?{name:"Opera",version:e[1]}:(a=a[2]?[a[1],a[2]]:[navigator.appName,navigator.appVersion,"-?"],null!=(e=r.match(/version\/(\d+)/i))&&a.splice(1,1,e[1]),{name:a[0],version:a[1]})}
function sea_page_loader(el){var _url=el.attr('href'),pageLoader=jQuery('.page-loading');if(_url){if(el.attr('target')==='_blank'){return}else{setTimeout(function(){pageLoader.addClass('visible');},100);setTimeout(function(){window.location.href=_url;},400);return false;}}}
function has_gsap() {if(!window.gsap) {alert('Please enable BM Content Builder plugin');return;}}
function sea_cursor_follower(linkEle){
	has_gsap();
	const seaBody = jQuery('body'),
		seaCursor = jQuery('.sea-cursor');
	if (!seaCursor.length) return;
	const pos = { x: window.innerWidth / 2, y: window.innerHeight / 2 },
		mouse = { x: pos.x, y: pos.y },
		speed = 0.35, 
		dot = seaCursor.find('.sea-cursor-dot'),
		text = seaCursor.find('.cursor-text-in'),
		xSet = gsap.quickSetter(seaCursor, 'x', 'px'),
		ySet = gsap.quickSetter(seaCursor, 'y', 'px');

	window.addEventListener("mousemove", e => {
	  mouse.x = e.x;
	  mouse.y = e.y;
	  seaCursor.css({'visibility': 'visible'})
	});

	linkEle.each(function () {
		const link = jQuery(this);
		link.on('mouseenter', e => {
			if (!seaBody.hasClass('isHover')) seaBody.addClass('isHover');
			if (link.hasClass('grid-item-mask-link')) { 
				// dot.css({'opacity':'0'})
				dot.css({'transform':'scale(2)'})
				text.css({'transform':'translateY(0)'})
				link.css({'cursor':'none'})
			} else { 
				dot.css({'transform':'scale(1.35)'})
			}
		})

		link.on('mouseleave', e => {
			if (seaBody.hasClass('isHover')) seaBody.removeClass('isHover'); 
			dot.css({'opacity':'','transform':''}) 
			text.css({'transform':''})
		})

		link.on('mousedown', e => { 
			if (e.which && e.which === 1) dot.css({'transform':'scale(3)'})
		})
		link.on('mouseup', e => {
			dot.css({'transform':''}) 
		})
	})
	
	gsap.ticker.add(() => { 
	  const dt = 1.0 - Math.pow(1.0 - speed, gsap.ticker.deltaRatio()); 
	  pos.x += (mouse.x - pos.x) * dt;
	  pos.y += (mouse.y - pos.y) * dt;
	  xSet(pos.x);
	  ySet(pos.y);
	});
}